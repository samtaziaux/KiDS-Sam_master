#######################################
###
### General instructions:
###         1) All parameters must be present in the file.
###         2) The structure is: <param_name> <param_value>, unless specified otherwise.
###            This structure must always be respected:
###         3) Any optional parameter that will not be used must have a 'None' entry in
###            the second column. (Do not include apostrophes in the config file!)
###
#######################################

# The file starts here #

########################
### General settings ###
########################

## Source and lens catalogues ##

# Full path to the folder containing the KiDS catalogues to be used and
# version of the KiDS catalogue being used. Options are 2 or 3. If you
# are using version 3 (i.e. KiDS-450) then you should also provide the
# path to the spec-z catalogue with the entry `specz_file`. If this
# entry is not given, then it is assumed that the spec-z catalogue
# is in the same location as the parent folder of individual patches.
# If you want to run the pipeline on the mocks, then select the KiDS_version = 0,
# and provide the full path and name of the used lightcone. Lenses in this case still
# conform to the GAMA-like catalogue format.
# The following paths work if you run the pipeline in Leiden.

KiDS_path           /disks/shear13/dvornik/KidsCatalogues/DR3/
KiDS_version        3 # NEW, DR1/DR2 not supported anymore. Use 0 for mocks or 3 for KiDS-450+, default is 3.
# this entry is optional
specz_file          /disks/shear13/dvornik/KidsCatalogues/IMSIM_Gall30th_2016-01-14_deepspecz_photoz_1000_4_specweight.cat
# NEW! This entry is required. It is a file with m-bias corrections in thin redhshift slices. See the same file in the demo folder for structure.
m_corr_file       m_corr_kids_450.txt

# New in v1.7lite: The column names for all the required KiDS column MUST be given
# comma-separated in the following entry. For KiDS use the correct column names for the colums given below (example for KiDS-450).
# There is NO need to specify the blinding with weight_A, e_A, etc.
kids_columns        SeqNr, ALPHA_J2000, DELTA_J2000, Z_B, model_SNratio, MASK, THELI_NAME, weight, m_cor, e1, e2


# Full path to the GAMA catalogue fits file, or to another lens catalog.
# This catalog should contain at least a right ascension and a declination
# columns. If no ID column is present, IDs are automatically generated
# which corresponds to the index of each object in the catalogue (counting
# from zero). If you wish to calculate the lensing signal as a function
# of physical projected distance (as opposed to angular separations),
# then the catalog ue must also contain a redshift column.
GAMA_path           /disks/shear10/brouwer_veersemeer/MergedCatalogues/GAMACatalogue_1.0.fits

# New in v1.6: The column names for the four required column can be given
# comma-separated in the following entry. For GAMA use ID,RA,DEC,Z (or comment out).
# It is not necessary to specify a redshift column name if redshifts are not
# going to be used.
lens_columns        ID,RA,DEC,Z


## cosmology ##

# Matter density at z=0.
Om                  0.315           # 0 < Om <= 1
# Dark energy density at z=0.
Ol                  0.685           # must be Ol = 1 - Om
# Curvature energy density. (NOT IMPLEMENTED)
Ok                  0               # must be Ok = 0
# Reduced Hubble constant.
h                   1.0             # h = H_0/100 km/s/Mpc


######################
### ESD Production ###
######################

## The production of the ESD is started using the following command:
##
## kids-ggl -c ggl_demo_nfw_stack.config --esd
##
## This will only run the ESD Production part of the config file, and output:
## 1) The shearcatalog (as a fits file) if you specified 'shearcatalog' as your purpose.
## 2) The ESD profile (as txt files) of the lens sample (for each separate bin).
## 3) The covariance matrix (as a txt file) if you specified 'shearcovariance' or 'shearbootstrap' as you purpose.
##
## The input lens sample and the output folder that are used for the ESD profiles must be specified below.

## Algorithm ##

# Folder where all ESD-related files will be stored. Will be created if it does not exist.
ESD_output_folder     esd

# Suffix for the output files (optional)
ESD_output_filename   None

# What is the purpose of running this pipeline? Available options are:
#  a) 'shearcatalog': calculate the ESD.
#  b) 'shearcovariance': calculate the ESD covariance from the data (see section 3.4 of
#                        Viola et al. 2015, MNRAS, 452, 3529). The ESD comes out for free
#                        as well.
#  c) 'shearbootstrap': calculate the ESD covariance by bootstrapping KiDS fields.
#  d) 'randomcatalog': REMOVED! To calculate the ESD around random points in the KiDS data, use randoms generated by GAMA/user and run 'shearcatalog'.
#  e) 'randombootstrap': REMOVED! To calculate the covariance of random points by bootstrapping KiDS fields, use randoms generated by GAMA/user and run 'shearcovariance'.
ESD_purpose           shearcatalog

# Radial binning scheme. Options are:
#  a) Comma-separated list with (Nbins,Rmin,Rmax). This will generate Nbins logarithmic bins between Rmin and Rmax.
#  b) Path to the txt file containing the bin edges and center.
      The txt file should contain three columns, separated by spaces, with Rmin, Rcenter and Rmax.
      Include all edges, such that Nedges = Nbins+1. See 'Rbins_demo.txt' in the 'help' folder for an example.
#  c) An integer between 1 and 5 for standard binning schemes (NOT YET IMPLEMENTED)
Rbins                 10,20,2000

# Units of the above binning and in which all results will be presented. Options are:
#  a) Physical units {'pc', 'kpc', 'Mpc'}
#  b) Sky units {'arcsec', 'arcmin', 'deg'}
Runit                 kpc

# Specify the comoving/physical scales to be used in radial source selection and Sigma_crit calculation
# Boolean parameter! Values are either 0 or 1.
comoving               0

# Number of cores you want to use to run the ESD production pipeline
ncores                3

## Lens selection

# Name of file containing GAMA ID's to be used in the analysis (optional)
lensID_file        None

# Weighting scheme (optional)
# Format: lens_weights   <weight_name>   <weight_catalogue>, where
#       <weight_name> is the name of the weight column in the fits file.
#                     The contribution to the ESD profile of each lens
#                     will be weighted by the assigned weight value.
#       <weight_catalogue> is the path to the fits file containing the weights.
#                     The weight values in the input fits file should have exactly
#                     the same order as the lenses in the used catalogue.
#lens_weights       mstarweight   ../brouwer/environment_project/mstarweight.fits
lens_weights      None

# Binning scheme (optional)
# Format: lens_binning   <bin_param>   <binning_catalogue>   <bin_edges>, where
#       <bin_param> is the parameter on which to bin (must be same name as in catalogue)
#       <binning_catalogue> is the path to the fits catalogue that contains the parameter
#                           on which to bin, should it not be included in the given lens catalogue.
#                           If the parameter is included in the lens catalog provided above, then 
#                           write 'self'.
#       <bin_edges> Comma-separated binning edges, in python format (Nedges = Nbins + 1, with bin[i-1] <= x < bin[i])
#lens_binning      None
lens_binning       envS4          self       0,1,2,3,4

# Allowed ranges for different galaxy parameters.
# Format: lens_limits[i]    <param>     <catalogue>     <limit(s)>, where
#       [i] is an indexing for the user only (e.g., lens_limits1, lens_limits2, etc).
#       <param> is the name of the parameter constraining the lens sample.
#       <catalogue> is the same as <binning_catalogue> for parameter lens_binning.
#       <limit(s)> is one or two comma-separated values. If one, then only galaxies with
#                  this exact value will be considered (for instance, choose RankBCG 1
#                  to use only centrals in groups); if two values, then these are the limits
#                  of the allowed range.
lens_limits1      rankBCG        self       1
lens_limits2      Nfof           self       5,inf

## Source selection

# Allowed ranges in the KiDS source catalogue. The format is similar as for lens_limits
# except the <catalogue> entry does not exist. When using with KiDS-450, use limits in
# range [0.1, 0.9] with 0.1 increment.
# Format: src_limits[i]    <param>      <limit(s)>
src_limits1           Z_B        0.1,0.9

# which blind catalogues to run. Any comma-separated combination of {A,B,C} is accepted
kids_blinds            A,B,C

## Optional settings

# allow for a gap between the source and lens redshifts;
# i.e., only select sources such that z_s > z_l + z_epsilon (optional)
z_epsilon           0.2             # Default = 0.2

# if running shearbootstrap, select the number of patches to group in a regular patern (optional)
nbootstraps         1               # Default = 1

# if running shearcovariance or shearbootstrap, select if you want to include the cross-covariance between the bins (optional)
# Boolean parameter! Values are either 0 or 1.
cross_covariance         1          # Default = 1


## The end
