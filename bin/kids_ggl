#!/usr/bin/env python
import argparse
import os

# for testing purposes only
import sys
sys.path.append('./')

# KiDS-GGL modules
from kids_ggl_pipeline import __version__
from kids_ggl_pipeline.esd_production import shearcode
from kids_ggl_pipeline.sampling import sampler, sampling_utils
from kids_ggl_pipeline.halomodel import hm_utils
from kids_ggl_pipeline.helpers import configuration


def main():

    args = parse_args()

    # ESD data production
    if args.esd:
        shearcode.run_esd(args.config_file)

    if args.sampler or args.demo:
        # set up halo model and sampler
        cfg = configuration.ConfigFile(args.config_file)
        hm_options, sampling_options = cfg.read()
        # run!
        sampler.run_emcee(hm_options, sampling_options, args)

    if not (args.sampler or args.demo or args.esd):
        print('Nothing to do.\n')

    return


def parse_args():
    parser = argparse.ArgumentParser()
    add = parser.add_argument
    add('--demo', dest='demo', action='store_true',
        help='evaluate a demo sample with the input parameters')
    add('--esd', dest='esd', action='store_true',
        help='run the ESD production module')
    add('-f', dest='force_overwrite', action='store_true',
        help='Overwrite output file if it exists')
    add('--sampler', dest='sampler', action='store_true',
        help='run the MCMC sampler')
    add('-c', '--config', dest='config_file')
    add('-v', '--version', action='version',
        version='%(prog)s {0}'.format(__version__))
    args = parser.parse_args()
    # options to turn on and off the data production or halo model?
    return args


main()

