=======================================
 The ESD Production Configuration File
=======================================

*THIS DOCUMENT IS INCOMPLETE. SEE* ``demo/ggl_esd_production.config`` *for now*.



This document explains how to write a ``kids_ggl`` ESD production configuration file, which defines the data used to compute the ESD 
from KiDS data.

The ESD production module has not been tested with any dataset other than KiDS-WL releases, and is updated with every release to match new conventions, if necessary. We therefore only provide support for the ESD production module of ``kids_ggl`` when analyzing KiDS data. In principle, though, if other data sets are made compliant with KiDS-WL formats, this module might be used with other datasets perhaps with minor modifications. (Whether this would be worth the effort is left for the user to decide.)

Some additional examples can be found in the `demo configuration file`_


General instructions
********************

* All parameters must be present in the file
* The structure for most parameters is, unless otherwise specified:
    name        value
* Any optional parameter that will not be used must be assigned a ``None`` value in the second column.


General settings
****************

Sources and lens catalogues
---------------------------

KiDS catalogues
+++++++++++++++

The first parameters define the full path to the folder containing the KiDS catalogues to be used, as well as the KiDS-WL data release. The paths below works if running the pipeline in one of the Leiden machines:

    KiDS_path       /disks/shear10/dvornik/KidsCatalogues/DR3/
    KiDS_version    3                                               # Options: 0=mocks, 3=KiDS-450

If using version ``3`` (i.e., KiDS-450), you must also specify the path to the spec-z catalogue with:

    specz_file      /disks/shear10/KiDS/KiDS-450/SPECZ/IMSIM_Gall30th_2016-01-14_deepspecz_photoz_1000_4_specweight.cat

And finally you must specify the path to the multiplicative bias correction table in thin redshift slices:

    m_corr_file     m_corr_kids_450.txt

*New in v1.7lite*: column names for all the required KiDS column **must** be given, comma-separated, in the following entry. For KiDS use, the correct column names for the colums are given below (example for KiDS-450). **There is no need** to specify the blinding with weight_A, e_A, etc. ::

    kids_columns    SeqNr,ALPHA_J2000,DELTA_J2000,Z_B,model_SNratio,MASK,THELI_NAME,weight,m_cor,e1,e2

Lens catalogues
+++++++++++++++

First, specify the full path to the lens catalogue. This catalog should contain at least a right ascension and a declination 
columns. If no ID column is present, IDs are automatically generated which corresponds to the index of each object in the catalogue 
(counting from zero). If you wish to calculate the lensing signal as a function of physical projected distance (as opposed to 
angular separations), then the catalogue must also contain a redshift column. (This entry is called ``GAMA_path`` for historical 
reasons and, again, the path below will work from one of the Leiden machines.) ::

    GAMA_path       /disks/shear10/brouwer_veersemeer/MergedCatalogues/GAMACatalogue_1.0.fits

Next, column names for the four required column can be given comma-separated in the following entry. For GAMA use ID,RA,DEC,Z (or 
comment out). It is not necessary to specify a redshift column name if redshifts are not going to be used: ::

    lens_columns    ID,RA,DEC,Z


Cosmology
---------

Here we specify four parameters that define a ``LambdaCDM`` cosmology: ::

    Om              0.315   # Matter energy density at z=0. 0 <= Om <= 1
    Ol              0.685   # Dark energy density at z=0. Must be Ol = 1-Om
    Ok              0       # Curvature energy density at z=0. Must be zero for now
    h               1.0     # h = H_0 / (100 km/s/Mpc)


ESD production
--------------

Algorithm
+++++++++

**Output folder** and an optional suffix for all the output files (see `output file structure`_): ::

    ESD_output_folder       my_esd_folder
    ESD_output_filename     None            # to ignore, write None

**Purpose.** There are three options:

* ``shearcatalog``: calculate the ESD by looping through lenses. The first run will create a catalogue containing the individual shear profiles of all lenses in the catalogue, which can afterwards be quickly stacked in different configurations. Useful for: testing different lens samples (bins and cuts in observables). Note that only the lens sample can be changed; cosmology, radial binning and source cuts should remain the same.

* ``shearcovariance``: calculate the ESD covariance from the data (see section 3.4 of Viola et al. 2015, MNRAS, 452, 3529). The ESD comes out for free as well. Useful for: the final run, when you have determined your lens sample and need the analytical covariance error bars and covariance matrix.

* ``shearbootstrap``: calculate the ESD covariance by bootstrapping KiDS fields. The first run will create a catalogue containing the individual shear profiles of all lenses in the catalogue. Afterwards these can be stacked in different configurations. In addition, shearbootstrap will compute the bootstrap error bars and covariance matrix. Useful for: the final run, when you have determined your lens sample and need the bootstrape error bars and covariance matrix.

    ESD_purpose         shearcatalog

**Radial binning scheme** and units. Options for the former are:

a) Comma-separated list with ``(Nbins,Rmin,Rmax)``. This will generate ``Nbins`` logarithmic bins between ``Rmin`` and ``Rmax``.
b) Path to the txt file containing the bin edges and center. The txt file should contain three columns, separated by spaces, with 
   ``Rmin``, ``Rcenter`` and ``Rmax``. The file should include all bin edges, such that ``Nedges = Nbins+1``. See 
   ``Rbins_demo.txt`` in the 'help' folder for an example.

Units can be physical (one of ``{pc, kpc, Mpc}``) or angular (one of ``{arcsec, arcmin, deg}``). ::

    Rbins           10,20,2000
    Runit           kpc

If using physical units, set the following to ``1`` to use comoving units or to ``0`` to use physical units ::

    comoving        1

Set how many cores should be used to run the ESD production pipeline ::

    ncores          4

Lens selection
++++++++++++++

If desired, specify the name of file containing lens IDs to be used in the analysis ::

    lensID_file     None

**Lens weighting scheme**. This is optionally specified with the format ``lens_weights  <weight_name>  <weight_catalogue>``, where

* ``weight_name`` is the name of the weight column in the fits file. The contribution to the ESD profile of each lens will be weighted by the assigned weight value.

* ``weight_catalogue`` is the path to the fits file containing the weights. The weight values in the input fits file should have exactly the same order as the lenses in the used catalogue. ::

    lens_weights    None


