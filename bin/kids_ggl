#!/usr/bin/env python
import argparse
import os

# for testing purposes only
import sys
sys.path.append('./')

# KiDS-GGL modules
from kids_ggl_pipeline.esd_production import shearcode
from kids_ggl_pipeline.sampling import sampler, sampling_utils
from kids_ggl_pipeline.halomodel import hm_utils
from kids_ggl_pipeline.helpers import configurations


def main():
    parser = argparse.ArgumentParser()
    add = parser.add_argument
    add('--demo', dest='demo', action='store_true',
        help='evaluate a demo sample with the input parameters')
    add('--esd', dest='esd', action='store_true',
        help='run the ESD production module')
    add('--sampler', dest='sampler', action='store_true',
        help='run the MCMC sampler')
    add('-c', '--config', dest='config_file')
    args = parser.parse_args()
    # options to turn on and off the data production or halo model?

    # ESD data production
    if args.esd:
        shearcode.run_esd(args.config_file)

    if args.sampler or args.demo:
        # Choose and set up a halo model
        #hm_options = hm_utils.read_config(args.config_file)
        # Setup and run MCMC sampler
        #sampling_options = sampling_utils.read_config(args.config_file)
        hm_options, sampling_options = \
            configurations.model_config(args.config_file)
        sampler.run_emcee(hm_options, sampling_options, args)

    if not (args.sampler or args.demo or args.esd):
        print('Nothing to do.\n')

    return


main()

